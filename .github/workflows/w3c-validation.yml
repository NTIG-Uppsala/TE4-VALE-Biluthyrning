# Automatically validate HTML and CSS files in a repository using the W3C Validator API

name: W3C Validation

# Trigger the workflow on push to the main branch or pull requests to the main branch
on:
    push:
        branches:
            - main
            - gh-pages
    pull_request:
        branches:
            - main

jobs:
    validate:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.x"

            - name: Validate HTML with W3C Validator API
              run: |
                  pip install requests

                  # Create a directory to store validation results
                  mkdir -p validation_results

                  # Initialize a flag to track if any errors or warnings are found
                  validation_failed=0

                  # Loop through each HTML file and validate it
                  for file in $(find . -name "*.html"); do
                      echo "Validating $file"
                      
                      # Send the HTML content to the W3C Validator API
                      response=$(curl -s -F "out=json" -F "content=@$file" https://validator.w3.org/nu/?parser=html5)
                      
                      # Write the API response to a JSON file
                      output_file="validation_results/w3c-validation-$(basename $file .html).json"
                      echo "$response" > "$output_file"
                      
                      echo "Validation results saved to $output_file"

                      # Check for errors or warnings in the response
                      errors=$(echo "$response" | python3 -c "import sys, json; data = json.load(sys.stdin); print(len([msg for msg in data['messages'] if msg['type'] in ['error', 'warning']]))")
                      if [ "$errors" -gt 0 ]; then
                          echo "Validation issues found in $file"
                          validation_failed=1
                      fi
                  done

            - name: Validate CSS with W3C Validator API
              run: |
                  pip install requests

                  # Loop through each CSS file and validate it
                  for file in $(find . -name "*.css"); do
                      echo "Validating $file"
                      
                      # Send the CSS content to the W3C Validator API
                      response=$(curl -s -F "file=@$file" https://jigsaw.w3.org/css-validator/validator?profile=css3&output=json)
                      
                      # Write the raw API response to a JSON file for debugging purposes
                      output_file="validation_results/w3c-validation-$(basename $file .css).json"
                      echo "$response" > "$output_file"
                      
                      echo "Validation results saved to $output_file"

                      # Check if the response is empty or not valid JSON
                      if [ -z "$response" ]; then
                          echo "Error: Received empty response from the CSS Validator API for $file"
                          validation_failed=1
                      else
                          # Debugging: Print the raw response to understand what is being returned
                          echo "Raw API response: $response"

                          # Attempt to parse the response as JSON
                          errors=$(echo "$response" | python3 -c "import sys, json; data = json.load(sys.stdin); errors = len(data.get('cssvalidation', {}).get('errors', [])); warnings = len(data.get('cssvalidation', {}).get('warnings', [])); print(errors + warnings)")
                          
                          if [ "$errors" -gt 0 ]; then
                              echo "Validation issues found in $file"
                              validation_failed=1
                          fi
                      fi
                  done

                  # Save the validation result flag to a file
                  echo "$validation_failed" > validation_results/validation_failed_flag.txt

            - name: Upload validation results
              uses: actions/upload-artifact@v3
              with:
                  name: w3c-validation-results
                  path: validation_results/

            - name: Fail if there were validation issues
              run: |
                  validation_failed=$(cat validation_results/validation_failed_flag.txt)
                  if [ "$validation_failed" -eq 1 ]; then
                      echo "Validation failed due to errors or warnings."
                      exit 1
                  else
                      echo "All files passed validation."
                  fi
