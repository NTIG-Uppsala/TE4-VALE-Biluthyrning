name: W3C CSS Validation

on:
    push:
        branches:
            - main
            - gh-pages
            - validation-testing
    pull_request:
        branches:
            - main

jobs:
    validate:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              # Checkout the repository code to the runner

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.x"
              # Set up Python environment for running validation scripts

            - name: Install dependencies
              run: |
                  pip install requests  # Ensure requests library is available
              # Install the required Python libraries

            - name: Validate CSS files
              run: |
                  # Create a directory to store validation results
                  mkdir -p validation_results

                  # Initialize a flag to track if validation fails
                  validation_failed=0

                  # Loop through each CSS file in the repository
                  for file in $(find . -name "*.css"); do
                      echo "Validating $file"

                      # Define the output file for the validation results
                      output_file="validation_results/w3c-validation-$(basename $file .css).json"

                      # Send the CSS content to the W3C Validator API requesting JSON format
                      response=$(curl -s -X POST "https://jigsaw.w3.org/css-validator/validator" \
                        -F "file=@$file" \
                        -F "output=json" \
                        -F "profile=css3")

                      # Save the raw response to a file for debugging purposes
                      echo "$response" > "$output_file"
                      echo "Validation results saved to $output_file"

                      # Check if the response contains HTML (likely an error page)
                      if echo "$response" | grep -q "<!DOCTYPE html>"; then
                          echo "Error: Received HTML response instead of JSON for $file"
                          echo "$response" >> validation_results/error_log.txt
                          validation_failed=1
                      else
                          # Attempt to parse the response as JSON
                          error_count=$(echo "$response" | python3 -c '
import sys
import json
try:
    data = json.load(sys.stdin)
    errors = len(data.get("cssvalidation", {}).get("errors", []))
    warnings = len(data.get("cssvalidation", {}).get("warnings", []))
    # Output error count (errors + warnings) for debugging
    print(errors + warnings)
except json.JSONDecodeError:
    # Exit with error if JSON is malformed
    sys.exit(1)
')

                          if [ "$error_count" -gt 0 ]; then
                              validation_failed=1
                              echo "Validation failed with $error_count issues in $file"
                          fi
                      fi
                  done

                  # Save the validation result status to a file
                  echo "$validation_failed" > validation_results/validation_failed_flag.txt

            - name: Upload validation results
              uses: actions/upload-artifact@v3
              with:
                  name: w3c-validation-results
                  path: validation_results/
              # Upload the validation results as an artifact

            - name: Fail if there were validation issues
              run: |
                  # Read the validation status from the flag file
                  validation_failed=$(cat validation_results/validation_failed_flag.txt)
                  # Exit with code 1 if validation failed
                  if [ "$validation_failed" -eq 1 ]; then
                      echo "Validation failed due to errors or warnings."
                      exit 1
                  else
                      echo "All files passed validation."
                  fi
              # Fail the job if validation encountered issues
